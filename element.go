package glui

type Element interface {
  RegisterParent(parent Element) // implemented by ElementData

  Parent() Element // implemented by ElementData
  Children() []Element // implemented by ElementData

  Cursor() int // defaults to -1 (which in turn defaults to system default, or cursor of parent element)
  Tooltip() string // defaults to empty string

  CalcDepth(stack *ElementStack) // auto generated by gen_element

  // returns actual width and height used
  // maxZIndex is used to normalize Z
  CalcPos(maxWidth, maxHeight, maxZIndex int) (int, int) // ***must be implemented by custom Element***
  Animate(tick uint64) // defaults to passing Animate to children

  Rect() Rect           // implemented by ElementData, needed for focusbox and menu anchors
  ZIndex() int          // implemented by ElementData
  Hit(x, y int) int     // return -1 if no hit, otherwise returns zIndex, implemented by ElementData
  Translate(dx, dy int) // implemented by ElementData

  Visible() bool // implemented by ElementData
  Hide() // implemented by ElementData
  Show() // default implemented by ElementData simply shows children and sets visible to true

  Enable() // implemented by ElementData
  Disable() // implemented by ElementData

  GetEventListener(name string) EventListener // returns nil if no EventListener specified

  Delete() // deallocs all owned tris, implemented by ElementData
}

// other utility methods often implemented by Elements
//  * InitRect(w, h int) (w, h)
//  * A(children ...Element) Element
//  * Size(w, h int) Element
//  * GetSize() (int, int)
//  * Padding(p ...int) Element
//  * Spacing(s int) Element
//  * On(name string, fn EventListener) Element
//  * ClearChildren()
